/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import controller.SchnorrController;
import model.SchnorrModel;
import javax.swing.*;
import java.awt.*;
import java.math.BigInteger;
import java.security.SecureRandom;
import java.util.concurrent.ExecutionException;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.PDPage;
import org.apache.pdfbox.pdmodel.common.PDRectangle;
import org.apache.pdfbox.text.PDFTextStripper;
/**
 *
 * @author ADMIN
 */
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
public class SchnorrJFrame extends javax.swing.JFrame {
    private SchnorrModel model;
    private SchnorrController controller;
    /**
     * Creates new form SchnorrJFrame
     */
    public SchnorrJFrame() {
        model = new SchnorrModel();
        controller = new SchnorrController(model);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelsinhkhoa = new javax.swing.JPanel();
        jLabeltitle = new javax.swing.JLabel();
        jLabelP = new javax.swing.JLabel();
        jLabelQ = new javax.swing.JLabel();
        jLabelG = new javax.swing.JLabel();
        jLabelX = new javax.swing.JLabel();
        jLabelY = new javax.swing.JLabel();
        jButtonTaoKhoa = new javax.swing.JButton();
        jButtonXacNhan = new javax.swing.JButton();
        jTextFieldP = new javax.swing.JTextField();
        jTextFieldG = new javax.swing.JTextField();
        jTextFieldX = new javax.swing.JTextField();
        jTextFieldQ = new javax.swing.JTextField();
        jTextFieldY = new javax.swing.JTextField();
        jButtonThuCong = new javax.swing.JButton();
        jPaneltaochuky = new javax.swing.JPanel();
        jLabeltitle2 = new javax.swing.JLabel();
        jLabelM = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaM = new javax.swing.JTextArea();
        jLabelK = new javax.swing.JLabel();
        jTextFieldK = new javax.swing.JTextField();
        jButtonKy = new javax.swing.JButton();
        jLabelR = new javax.swing.JLabel();
        jTextFieldR = new javax.swing.JTextField();
        jLabelE = new javax.swing.JLabel();
        jTextFieldE = new javax.swing.JTextField();
        jLabelS = new javax.swing.JLabel();
        jTextFieldS = new javax.swing.JTextField();
        jButtonGui = new javax.swing.JButton();
        jButtonLuuFile = new javax.swing.JButton();
        jButtonNhapFile = new javax.swing.JButton();
        jPanelkiemtra = new javax.swing.JPanel();
        jLabeltitle3 = new javax.swing.JLabel();
        jButtonXacMinh = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaM1 = new javax.swing.JTextArea();
        jLabelM1 = new javax.swing.JLabel();
        jLabelR1 = new javax.swing.JLabel();
        jTextFieldR1 = new javax.swing.JTextField();
        jLabelE1 = new javax.swing.JLabel();
        jTextFieldE1 = new javax.swing.JTextField();
        jLabelS1 = new javax.swing.JLabel();
        jTextFieldS1 = new javax.swing.JTextField();
        jLabelV = new javax.swing.JLabel();
        jTextFieldV = new javax.swing.JTextField();
        jButtonLuuFile1 = new javax.swing.JButton();
        jButtonNhapFile1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Schnorr");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jTabbedPane1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 51, 51), new java.awt.Color(51, 51, 255), new java.awt.Color(255, 255, 0), new java.awt.Color(204, 0, 204)));
        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jPanelsinhkhoa.setBackground(new java.awt.Color(255, 228, 228));
        jPanelsinhkhoa.setPreferredSize(new java.awt.Dimension(665, 460));

        jLabeltitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabeltitle.setText("SINH KHÓA");

        jLabelP.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelP.setText("Tham số P");

        jLabelQ.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelQ.setText("Tham số Q");

        jLabelG.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelG.setText("Tham số G");

        jLabelX.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelX.setText("Khóa bí mật X");

        jLabelY.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelY.setText("Khóa công khai Y");

        jButtonTaoKhoa.setBackground(new java.awt.Color(51, 102, 255));
        jButtonTaoKhoa.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButtonTaoKhoa.setForeground(new java.awt.Color(255, 255, 255));
        jButtonTaoKhoa.setText("Ngẫu Nhiên");
        jButtonTaoKhoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTaoKhoaActionPerformed(evt);
            }
        });

        jButtonXacNhan.setBackground(new java.awt.Color(51, 102, 255));
        jButtonXacNhan.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButtonXacNhan.setForeground(new java.awt.Color(255, 255, 255));
        jButtonXacNhan.setText("Xác Nhận");
        jButtonXacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonXacNhanActionPerformed(evt);
            }
        });

        jTextFieldP.setColumns(20);
        jTextFieldP.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextFieldP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPActionPerformed(evt);
            }
        });

        jTextFieldG.setEditable(false);
        jTextFieldG.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextFieldG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldGActionPerformed(evt);
            }
        });

        jTextFieldX.setEditable(false);
        jTextFieldX.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextFieldX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldXActionPerformed(evt);
            }
        });

        jTextFieldQ.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextFieldQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldQActionPerformed(evt);
            }
        });

        jTextFieldY.setEditable(false);
        jTextFieldY.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextFieldY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldYActionPerformed(evt);
            }
        });

        jButtonThuCong.setBackground(new java.awt.Color(51, 102, 255));
        jButtonThuCong.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButtonThuCong.setForeground(new java.awt.Color(255, 255, 255));
        jButtonThuCong.setText("Tạo Khóa");
        jButtonThuCong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonThuCongActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelsinhkhoaLayout = new javax.swing.GroupLayout(jPanelsinhkhoa);
        jPanelsinhkhoa.setLayout(jPanelsinhkhoaLayout);
        jPanelsinhkhoaLayout.setHorizontalGroup(
            jPanelsinhkhoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelsinhkhoaLayout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addComponent(jButtonTaoKhoa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonThuCong)
                .addGap(105, 105, 105)
                .addComponent(jButtonXacNhan)
                .addGap(103, 103, 103))
            .addGroup(jPanelsinhkhoaLayout.createSequentialGroup()
                .addGap(283, 283, 283)
                .addComponent(jLabeltitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanelsinhkhoaLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanelsinhkhoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelsinhkhoaLayout.createSequentialGroup()
                        .addGroup(jPanelsinhkhoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelP)
                            .addComponent(jLabelQ)
                            .addComponent(jLabelG))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanelsinhkhoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldQ, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldG, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelsinhkhoaLayout.createSequentialGroup()
                        .addComponent(jLabelY)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldY, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelsinhkhoaLayout.createSequentialGroup()
                        .addComponent(jLabelX)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldX, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        jPanelsinhkhoaLayout.setVerticalGroup(
            jPanelsinhkhoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelsinhkhoaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabeltitle)
                .addGap(32, 32, 32)
                .addGroup(jPanelsinhkhoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelP)
                    .addComponent(jTextFieldP, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanelsinhkhoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelQ)
                    .addComponent(jTextFieldQ, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanelsinhkhoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelG)
                    .addComponent(jTextFieldG, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanelsinhkhoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldX, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelX))
                .addGap(38, 38, 38)
                .addGroup(jPanelsinhkhoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldY, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelY))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(jPanelsinhkhoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonTaoKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonThuCong, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        jTabbedPane1.addTab("Sinh khóa", jPanelsinhkhoa);

        jPaneltaochuky.setBackground(new java.awt.Color(228, 255, 228));

        jLabeltitle2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabeltitle2.setText("TẠO CHỮ KÝ");

        jLabelM.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelM.setText("Nhập thông điệp");

        jTextAreaM.setColumns(20);
        jTextAreaM.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jTextAreaM.setRows(5);
        jScrollPane1.setViewportView(jTextAreaM);

        jLabelK.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelK.setText("Tham số K ");

        jTextFieldK.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextFieldK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldKActionPerformed(evt);
            }
        });

        jButtonKy.setBackground(new java.awt.Color(51, 102, 255));
        jButtonKy.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButtonKy.setForeground(new java.awt.Color(255, 255, 255));
        jButtonKy.setText("Ký");
        jButtonKy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonKyActionPerformed(evt);
            }
        });

        jLabelR.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelR.setText("Giá trị R");

        jTextFieldR.setEditable(false);
        jTextFieldR.setColumns(20);
        jTextFieldR.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabelE.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelE.setText("Giá trị băm");

        jTextFieldE.setEditable(false);
        jTextFieldE.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabelS.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelS.setText("Giá trị S");

        jTextFieldS.setEditable(false);
        jTextFieldS.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jButtonGui.setBackground(new java.awt.Color(51, 102, 255));
        jButtonGui.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButtonGui.setForeground(new java.awt.Color(255, 255, 255));
        jButtonGui.setText("Gửi");
        jButtonGui.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuiActionPerformed(evt);
            }
        });

        jButtonLuuFile.setBackground(new java.awt.Color(51, 102, 255));
        jButtonLuuFile.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButtonLuuFile.setForeground(new java.awt.Color(255, 255, 255));
        jButtonLuuFile.setText("Lưu File");
        jButtonLuuFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLuuFileActionPerformed(evt);
            }
        });

        jButtonNhapFile.setBackground(new java.awt.Color(51, 102, 255));
        jButtonNhapFile.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButtonNhapFile.setForeground(new java.awt.Color(255, 255, 255));
        jButtonNhapFile.setText("Nhập File");
        jButtonNhapFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNhapFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPaneltaochukyLayout = new javax.swing.GroupLayout(jPaneltaochuky);
        jPaneltaochuky.setLayout(jPaneltaochukyLayout);
        jPaneltaochukyLayout.setHorizontalGroup(
            jPaneltaochukyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPaneltaochukyLayout.createSequentialGroup()
                .addGroup(jPaneltaochukyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPaneltaochukyLayout.createSequentialGroup()
                        .addGap(280, 280, 280)
                        .addComponent(jLabeltitle2))
                    .addGroup(jPaneltaochukyLayout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(jButtonKy, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(98, 98, 98)
                        .addComponent(jButtonLuuFile)
                        .addGap(103, 103, 103)
                        .addComponent(jButtonGui, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPaneltaochukyLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPaneltaochukyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelK)
                            .addComponent(jLabelM)
                            .addComponent(jLabelR)
                            .addComponent(jLabelE)
                            .addComponent(jLabelS))
                        .addGap(18, 18, 18)
                        .addGroup(jPaneltaochukyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonNhapFile)
                            .addGroup(jPaneltaochukyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextFieldE)
                                .addComponent(jTextFieldR)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE)
                                .addComponent(jTextFieldK)
                                .addComponent(jTextFieldS, javax.swing.GroupLayout.Alignment.TRAILING)))))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        jPaneltaochukyLayout.setVerticalGroup(
            jPaneltaochukyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPaneltaochukyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabeltitle2)
                .addGap(18, 18, 18)
                .addGroup(jPaneltaochukyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelM)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jButtonNhapFile, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPaneltaochukyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelK)
                    .addComponent(jTextFieldK, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPaneltaochukyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelR)
                    .addComponent(jTextFieldR, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPaneltaochukyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelE)
                    .addComponent(jTextFieldE, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPaneltaochukyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelS)
                    .addComponent(jTextFieldS, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPaneltaochukyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonKy, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonGui, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonLuuFile, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        jTabbedPane1.addTab("Tạo chữ ký", jPaneltaochuky);

        jPanelkiemtra.setBackground(new java.awt.Color(227, 241, 255));

        jLabeltitle3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabeltitle3.setText("KIỂM TRA CHỮ KÝ");

        jButtonXacMinh.setBackground(new java.awt.Color(51, 102, 255));
        jButtonXacMinh.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButtonXacMinh.setForeground(new java.awt.Color(255, 255, 255));
        jButtonXacMinh.setText("Xác Minh");
        jButtonXacMinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonXacMinhActionPerformed(evt);
            }
        });

        jTextAreaM1.setColumns(20);
        jTextAreaM1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jTextAreaM1.setRows(5);
        jScrollPane3.setViewportView(jTextAreaM1);

        jLabelM1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelM1.setText("Nhập thông điệp");

        jLabelR1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelR1.setText("Giá trị R");

        jTextFieldR1.setColumns(20);
        jTextFieldR1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabelE1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelE1.setText("Giá trị băm");

        jTextFieldE1.setEditable(false);
        jTextFieldE1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabelS1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelS1.setText("Giá trị S");

        jTextFieldS1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabelV.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelV.setText("Giá trị V");

        jTextFieldV.setEditable(false);
        jTextFieldV.setColumns(20);
        jTextFieldV.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jButtonLuuFile1.setBackground(new java.awt.Color(51, 102, 255));
        jButtonLuuFile1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButtonLuuFile1.setForeground(new java.awt.Color(255, 255, 255));
        jButtonLuuFile1.setText("Lưu File");
        jButtonLuuFile1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLuuFile1ActionPerformed(evt);
            }
        });

        jButtonNhapFile1.setBackground(new java.awt.Color(51, 102, 255));
        jButtonNhapFile1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButtonNhapFile1.setForeground(new java.awt.Color(255, 255, 255));
        jButtonNhapFile1.setText("Nhập File");
        jButtonNhapFile1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNhapFile1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelkiemtraLayout = new javax.swing.GroupLayout(jPanelkiemtra);
        jPanelkiemtra.setLayout(jPanelkiemtraLayout);
        jPanelkiemtraLayout.setHorizontalGroup(
            jPanelkiemtraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelkiemtraLayout.createSequentialGroup()
                .addGroup(jPanelkiemtraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelkiemtraLayout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addComponent(jButtonXacMinh, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(110, 110, 110)
                        .addComponent(jButtonLuuFile1))
                    .addGroup(jPanelkiemtraLayout.createSequentialGroup()
                        .addGap(251, 251, 251)
                        .addComponent(jLabeltitle3))
                    .addGroup(jPanelkiemtraLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanelkiemtraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelR1)
                            .addComponent(jLabelM1)
                            .addComponent(jLabelE1)
                            .addComponent(jLabelS1)
                            .addComponent(jLabelV, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelkiemtraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonNhapFile1)
                            .addGroup(jPanelkiemtraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextFieldV, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
                                .addComponent(jTextFieldS1)
                                .addComponent(jTextFieldE1)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
                                .addComponent(jTextFieldR1)))))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        jPanelkiemtraLayout.setVerticalGroup(
            jPanelkiemtraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelkiemtraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabeltitle3)
                .addGap(18, 18, 18)
                .addGroup(jPanelkiemtraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelM1)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonNhapFile1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(jPanelkiemtraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldR1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelR1))
                .addGap(12, 12, 12)
                .addGroup(jPanelkiemtraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelE1)
                    .addComponent(jTextFieldE1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelkiemtraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelS1)
                    .addComponent(jTextFieldS1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelkiemtraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelV)
                    .addComponent(jTextFieldV, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanelkiemtraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonXacMinh, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonLuuFile1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        jTabbedPane1.addTab("Kiểm tra chữ ký", jPanelkiemtra);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldQActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldQActionPerformed

    private void jTextFieldYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldYActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldYActionPerformed

    private void jTextFieldGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldGActionPerformed

    private void jTextFieldXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldXActionPerformed

    private void jButtonTaoKhoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTaoKhoaActionPerformed
 
        SwingWorker<Void, Void> worker = new SwingWorker<>() {
        @Override
        protected Void doInBackground() {
            try {
                controller.generateParameters();
                controller.generateKeys();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(SchnorrJFrame.this,"Lỗi: " + e.getMessage(),"Lỗi",JOptionPane.ERROR_MESSAGE);
            }
               return null;
        }

        @Override
        protected void done() {
            try {
                get();
                jTextFieldP.setText(model.getP().toString());
                jTextFieldQ.setText(model.getQ().toString());
                jTextFieldG.setText(model.getG().toString());
                jTextFieldX.setText(model.getX().toString());
                jTextFieldY.setText(model.getY().toString());
                showAutoClosingDialog(SchnorrJFrame.this,"Khóa tạo thành công!","Thông báo",2000);
                jTextFieldP.setEditable(false); 
                jTextFieldQ.setEditable(false); 
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(SchnorrJFrame.this,"Lỗi " + ex.getMessage(),"Lỗi",JOptionPane.ERROR_MESSAGE);
                }
            }
        };
        worker.execute();
    }//GEN-LAST:event_jButtonTaoKhoaActionPerformed

    private void jButtonXacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonXacNhanActionPerformed
        // TODO add your handling code here:
        BigInteger p = model.getP();
        BigInteger q = model.getQ();
        BigInteger g = model.getG();
        BigInteger x = model.getX();
        BigInteger y = model.getY();
        if(p.equals(BigInteger.ZERO) || p.equals(BigInteger.ZERO)|| g.equals(BigInteger.ZERO)|| x.equals(BigInteger.ZERO)
                || y.equals(BigInteger.ZERO)){
            JOptionPane.showMessageDialog(SchnorrJFrame.this,"Vui lòng tạo khóa trước khi xác nhận!" ,"Lỗi",JOptionPane.ERROR_MESSAGE);
            return;
        }
        jTabbedPane1.setSelectedIndex(1);

    }//GEN-LAST:event_jButtonXacNhanActionPerformed

    private void jTextFieldKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldKActionPerformed

    private void jButtonKyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonKyActionPerformed
        // TODO add your handling code here:
        try {
            String message = jTextAreaM.getText();
            if (message.isEmpty()){
                JOptionPane.showMessageDialog(SchnorrJFrame.this,"Vui lòng nhập thông điệp!" ,"Lỗi",JOptionPane.ERROR_MESSAGE);
                return;
            }
            BigInteger[] signature = controller.sign(message);
            jTextFieldK.setText(model.getK().toString());
            jTextFieldR.setText(model.getR().toString());
            jTextFieldE.setText(model.getE().toString());
            jTextFieldS.setText(model.getS().toString());
            showAutoClosingDialog(SchnorrJFrame.this,"Chữ ký tạo thành công!" ,"Thông báo",2000);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(SchnorrJFrame.this,"Lỗi " + ex.getMessage(),"Lỗi",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonKyActionPerformed

    private void jButtonXacMinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonXacMinhActionPerformed
        // TODO add your handling code here:
        try {
            String message = jTextAreaM1.getText().trim();
            if (message.isEmpty()) {
                JOptionPane.showMessageDialog(SchnorrJFrame.this, "Vui lòng nhập thông điệp!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }

            BigInteger r = new BigInteger(jTextFieldR1.getText().trim());
            BigInteger s = new BigInteger(jTextFieldS1.getText().trim());
            BigInteger[] signature = {r, s};

            boolean isValid = controller.verify(message, signature);
            jTextFieldV.setText(model.getV().toString());

        if (isValid) {
                showAutoClosingDialog(SchnorrJFrame.this,"Chữ ký hợp lệ!","Thông báo",2000);
        } else {
                showAutoClosingDialog(SchnorrJFrame.this,"Chữ ký giả mạo!","Thông báo",2000);
        }
        } catch (IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(SchnorrJFrame.this, "Kết quả: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(SchnorrJFrame.this, "Lỗi: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonXacMinhActionPerformed

    private void jButtonGuiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuiActionPerformed
        // TODO add your handling code here:
        String message = jTextAreaM.getText().trim();
        String r = jTextFieldR.getText();
        String e = jTextFieldE.getText();
        String s = jTextFieldS.getText();

        if (message.isEmpty() || r.isEmpty() || e.isEmpty() || s.isEmpty()) {
            JOptionPane.showMessageDialog(SchnorrJFrame.this,"Vui lòng tạo chữ ký trước khi gửi!" ,"Lỗi",JOptionPane.ERROR_MESSAGE);
            return;
        }
        jTextAreaM1.setText(message);
        jTextFieldR1.setText(r);
        jTextFieldE1.setText(e);
        jTextFieldS1.setText(s);
        model.setR(new BigInteger(r));
        model.setS(new BigInteger(s));
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_jButtonGuiActionPerformed

    private void jTextFieldPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPActionPerformed

    private void jButtonThuCongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonThuCongActionPerformed
        // TODO add your handling code here:
        
        try {
            String pStr = jTextFieldP.getText().trim();
            String qStr = jTextFieldQ.getText().trim();

            if (pStr.isEmpty() || qStr.isEmpty()) {
                JOptionPane.showMessageDialog(SchnorrJFrame.this, "Vui lòng nhập cả P và Q!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }

            BigInteger p = new BigInteger(pStr);
            BigInteger q = new BigInteger(qStr);

//            int qBitLength = q.bitLength();
//            int pBitLength = p.bitLength();
//            int minQBits = 160; 
//            int minPBits = 1024;

//            if (qBitLength < minQBits) {
//                JOptionPane.showMessageDialog(SchnorrJFrame.this, 
//                    "Số bit của Q (" + qBitLength + ") nhỏ hơn ngưỡng an toàn (" + minQBits + "). Tự động tăng lên " + minQBits + " bit.", 
//                    "Cảnh báo", JOptionPane.WARNING_MESSAGE);
//                q = BigInteger.probablePrime(minQBits, new SecureRandom());
//            }
//            if (pBitLength < minPBits) {
//                JOptionPane.showMessageDialog(SchnorrJFrame.this, 
//                    "Số bit của P (" + pBitLength + ") nhỏ hơn ngưỡng an toàn (" + minPBits + "). Tự động tăng lên " + minPBits + " bit.", 
//                    "Cảnh báo", JOptionPane.WARNING_MESSAGE);
//                BigInteger a;
//                do {
//                    a = new BigInteger(minPBits - minQBits, new SecureRandom());
//                    p = q.multiply(a).add(BigInteger.ONE);
//                } while (!p.isProbablePrime(100));
//            }

            if (!p.isProbablePrime(100)) {
                JOptionPane.showMessageDialog(SchnorrJFrame.this, "P phải là số nguyên tố!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (!q.isProbablePrime(100)) {
                JOptionPane.showMessageDialog(SchnorrJFrame.this, "Q phải là số nguyên tố!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }

            BigInteger pMinusOne = p.subtract(BigInteger.ONE);
            if (!pMinusOne.mod(q).equals(BigInteger.ZERO)) {
                JOptionPane.showMessageDialog(SchnorrJFrame.this, "Q phải là ước của p-1!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }

            model.setP(p);
            model.setQ(q);

            BigInteger g;
            BigInteger h;
            do {
                h = new BigInteger(p.bitLength() - 1, new SecureRandom());
                g = h.modPow(pMinusOne.divide(q), p);
            } while (g.equals(BigInteger.ONE));
            model.setG(g);

            BigInteger x;
            do {
                x = new BigInteger(q.bitLength(), new SecureRandom()).mod(q);
            } while (x.equals(BigInteger.ZERO));
            model.setX(x);

            BigInteger y = g.modPow(x, p);
            model.setY(y);

            jTextFieldP.setText(p.toString());
            jTextFieldQ.setText(q.toString());
            jTextFieldG.setText(g.toString());
            jTextFieldX.setText(x.toString());
            jTextFieldY.setText(y.toString());
            jTextFieldP.setEditable(false); 
            jTextFieldQ.setEditable(false); 

            showAutoClosingDialog(SchnorrJFrame.this, "Khóa tạo thủ công thành công!", "Thông báo", 2000);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(SchnorrJFrame.this, "P hoặc Q không phải số hợp lệ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(SchnorrJFrame.this, "Lỗi: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonThuCongActionPerformed

    private void jButtonLuuFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLuuFileActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File("E:\\Downloads"));
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "Text files (*.txt) | PDF files (*.pdf) | Word files (*.docx)", "txt", "pdf", "docx");
        fileChooser.setFileFilter(filter);

        // --- Lưu THÔNG ĐIỆP ---
        JOptionPane.showMessageDialog(this, "Chọn nơi lưu THÔNG ĐIỆP");
        int resultMsg = fileChooser.showSaveDialog(this);
        if (resultMsg != JFileChooser.APPROVE_OPTION) return;

        File messageFile = fileChooser.getSelectedFile();
        String messagePath = messageFile.getAbsolutePath();
        if (!messagePath.matches(".*\\.(txt|pdf|docx)$")) messagePath += ".txt";

        // --- Lưu CHỮ KÝ ---
        JOptionPane.showMessageDialog(this, "Chọn nơi lưu CHỮ KÝ");
        int resultSig = fileChooser.showSaveDialog(this);
        if (resultSig != JFileChooser.APPROVE_OPTION) return;

        File sigFile = fileChooser.getSelectedFile();
        String sigPath = sigFile.getAbsolutePath();
        if (!sigPath.matches(".*\\.(txt|pdf|docx)$")) sigPath += ".txt";

        // Nội dung
        String message = jTextAreaM.getText();
        String signatureContent = "R: " + jTextFieldR.getText() + "\n" +
                                  "S: " + jTextFieldS.getText();

        try {
            // --- Ghi THÔNG ĐIỆP ---
            saveToFile(messagePath, message);

            // --- Ghi CHỮ KÝ ---
            saveToFile(sigPath, signatureContent);

            showAutoClosingDialog(this, "Đã lưu thông điệp và chữ ký thành 2 file riêng!", "Thông báo", 2000);

        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi khi lưu file - " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonLuuFileActionPerformed

    private void jButtonNhapFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNhapFileActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File("E:\\Downloads"));
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "Text files (*.txt) | PDF files (*.pdf) | Word files (*.docx)", "txt", "pdf", "docx");
        fileChooser.setFileFilter(filter);

        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            try {
                String fileContent = readFileContent(selectedFile);
                jTextAreaM.setText(fileContent); // Đặt nội dung vào jTextAreaM trong tab Tạo chữ ký
                showAutoClosingDialog(SchnorrJFrame.this,"Đã nhập file thành công!","Thông báo",2000);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(SchnorrJFrame.this, "Lỗi khi đọc file - " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonNhapFileActionPerformed

    private void jButtonLuuFile1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLuuFile1ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File("E:\\Downloads"));
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "Text files (*.txt) | PDF files (*.pdf) | Word files (*.docx)", "txt", "pdf", "docx");
        fileChooser.setFileFilter(filter);

        // --- Lưu THÔNG ĐIỆP ---
        JOptionPane.showMessageDialog(this, "Chọn nơi lưu THÔNG ĐIỆP");
        int resultMsg = fileChooser.showSaveDialog(this);
        if (resultMsg != JFileChooser.APPROVE_OPTION) return;

        File messageFile = fileChooser.getSelectedFile();
        String messagePath = messageFile.getAbsolutePath();
        if (!messagePath.matches(".*\\.(txt|pdf|docx)$")) messagePath += ".txt";

        // --- Lưu CHỮ KÝ ---
        JOptionPane.showMessageDialog(this, "Chọn nơi lưu CHỮ KÝ");
        int resultSig = fileChooser.showSaveDialog(this);
        if (resultSig != JFileChooser.APPROVE_OPTION) return;

        File sigFile = fileChooser.getSelectedFile();
        String sigPath = sigFile.getAbsolutePath();
        if (!sigPath.matches(".*\\.(txt|pdf|docx)$")) sigPath += ".txt";

        // Nội dung
        String message = jTextAreaM.getText();
        String signatureContent = "R: " + jTextFieldR.getText() + "\n" +
                                  "S: " + jTextFieldS.getText();

        try {
            // --- Ghi THÔNG ĐIỆP ---
            saveToFile(messagePath, message);

            // --- Ghi CHỮ KÝ ---
            saveToFile(sigPath, signatureContent);

            showAutoClosingDialog(this, "Đã lưu thông điệp và chữ ký thành 2 file riêng!", "Thông báo", 2000);

        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi khi lưu file - " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonLuuFile1ActionPerformed
    private void saveToFile(String filePath, String content) throws IOException {
        if (filePath.endsWith(".txt")) {
            try (PrintWriter writer = new PrintWriter(filePath)) {
                writer.write(content);
            }
        } else if (filePath.endsWith(".pdf")) {
            PdfWriter pdfWriter = new PdfWriter(filePath);
            PdfDocument pdfDocument = new PdfDocument(pdfWriter);
            Document document = new Document(pdfDocument);
            document.add(new com.itextpdf.layout.element.Paragraph(content));
            document.close();
        } else if (filePath.endsWith(".docx")) {
            XWPFDocument document = new XWPFDocument();
            try (FileOutputStream out = new FileOutputStream(filePath)) {
                document.createParagraph().createRun().setText(content);
                document.write(out);
            }
        }
    }
    private void jButtonNhapFile1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNhapFile1ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File("E:\\Downloads"));
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
            "Text files (*.txt) | PDF files (*.pdf) | Word files (*.docx)", "txt", "pdf", "docx");
        fileChooser.setFileFilter(filter);

        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            try {
                String fileContent = readFileContent(selectedFile);
                jTextAreaM1.setText(fileContent);
                showAutoClosingDialog(SchnorrJFrame.this,"Đã nhập file thành công!","Thông báo",2000);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(SchnorrJFrame.this, "Lỗi khi đọc file - " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonNhapFile1ActionPerformed
    
    private String readFileContent(File file) throws IOException {
        StringBuilder content = new StringBuilder();
        String fileExt = file.getName().substring(file.getName().lastIndexOf(".") + 1).toLowerCase();

        if (fileExt.equals("txt")) {
            try (BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(file), "UTF-8"))) {
                String line;
                while ((line = reader.readLine()) != null) {
                    content.append(line).append("\n");
                }
            }
        } else if (fileExt.equals("pdf")) {
            try (PDDocument document = PDDocument.load(file)) {
                PDFTextStripper stripper = new PDFTextStripper();
                content.append(stripper.getText(document));
            }
        } else if (fileExt.equals("docx")) {
            try (FileInputStream fis = new FileInputStream(file)) {
                XWPFDocument document = new XWPFDocument(fis);
                for (XWPFParagraph paragraph : document.getParagraphs()) {
                content.append(paragraph.getText()).append("\n");
            }
            }
        }
        return content.toString().trim();
    }
    
    public static void showAutoClosingDialog(JFrame parent, String message, String title, int delayInMillis) {
        // Tạo hộp thoại JOptionPane
        JOptionPane pane = new JOptionPane(message, JOptionPane.INFORMATION_MESSAGE);
        JDialog dialog = pane.createDialog(parent, title);

        // Tạo Timer để đóng hộp thoại sau `delayInMillis` milliseconds
        Timer timer = new Timer(delayInMillis, e -> dialog.dispose());
        timer.setRepeats(false); // Chỉ chạy 1 lần
        timer.start();

        // Hiển thị hộp thoại
        dialog.setVisible(true);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SchnorrJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SchnorrJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SchnorrJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SchnorrJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        UIDefaults ui = UIManager.getDefaults();
        ui.put("ScrollBarUI", ScrollBarWin11UI.class.getCanonicalName());
        
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SchnorrJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonGui;
    private javax.swing.JButton jButtonKy;
    private javax.swing.JButton jButtonLuuFile;
    private javax.swing.JButton jButtonLuuFile1;
    private javax.swing.JButton jButtonNhapFile;
    private javax.swing.JButton jButtonNhapFile1;
    private javax.swing.JButton jButtonTaoKhoa;
    private javax.swing.JButton jButtonThuCong;
    private javax.swing.JButton jButtonXacMinh;
    private javax.swing.JButton jButtonXacNhan;
    private javax.swing.JLabel jLabelE;
    private javax.swing.JLabel jLabelE1;
    private javax.swing.JLabel jLabelG;
    private javax.swing.JLabel jLabelK;
    private javax.swing.JLabel jLabelM;
    private javax.swing.JLabel jLabelM1;
    private javax.swing.JLabel jLabelP;
    private javax.swing.JLabel jLabelQ;
    private javax.swing.JLabel jLabelR;
    private javax.swing.JLabel jLabelR1;
    private javax.swing.JLabel jLabelS;
    private javax.swing.JLabel jLabelS1;
    private javax.swing.JLabel jLabelV;
    private javax.swing.JLabel jLabelX;
    private javax.swing.JLabel jLabelY;
    private javax.swing.JLabel jLabeltitle;
    private javax.swing.JLabel jLabeltitle2;
    private javax.swing.JLabel jLabeltitle3;
    private javax.swing.JPanel jPanelkiemtra;
    private javax.swing.JPanel jPanelsinhkhoa;
    private javax.swing.JPanel jPaneltaochuky;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextAreaM;
    private javax.swing.JTextArea jTextAreaM1;
    private javax.swing.JTextField jTextFieldE;
    private javax.swing.JTextField jTextFieldE1;
    private javax.swing.JTextField jTextFieldG;
    private javax.swing.JTextField jTextFieldK;
    private javax.swing.JTextField jTextFieldP;
    private javax.swing.JTextField jTextFieldQ;
    private javax.swing.JTextField jTextFieldR;
    private javax.swing.JTextField jTextFieldR1;
    private javax.swing.JTextField jTextFieldS;
    private javax.swing.JTextField jTextFieldS1;
    private javax.swing.JTextField jTextFieldV;
    private javax.swing.JTextField jTextFieldX;
    private javax.swing.JTextField jTextFieldY;
    // End of variables declaration//GEN-END:variables
}
